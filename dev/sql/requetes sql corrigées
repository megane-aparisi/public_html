

-- La liste des bureaux (adresse et ville) triés par pays décroissant puis par état

SELECT addressLine1, city

FROM offices

ORDER BY country

DESC, city;

​

-- La liste des avions

-- (code et nom)

-- triés par vendeur et par

-- quantité en stock décroissants

SELECT productCode, productName

FROM products WHERE productDescription

LIKE '%plane%' ORDER BY quantityInStock DESC;

​

-- La liste des produits

-- (nom, vendeur et prix de vente)

-- qui sont vendus au moins 132$

-- triés par nom du produit

SELECT productName, productVendor, MSRP

FROM products WHERE MSRP >= 132

ORDER BY productName;

​

-- La liste des produits

-- (code, nom, échelle et quantité)

-- qui ont une échelle soit de 1:10,

-- soit de 1:18

-- triés par quantité en stock décroissante

SELECT productCode, productName, productScale, quantityInStock

FROM products

WHERE productScale = '1:10'

OR productScale = '1:18'

ORDER BY quantityInStock DESC;

​

​

-- La liste des produits

-- (code, nom et prix d'achat)

-- des produits achetés au moins 60$

--au plus 90$

-- triés par prix d'achat

SELECT productCode, productName, buyPrice

FROM product

WHERE buyPrice BETWEEN 60 AND 90

ORDER BY buyPrice;

​

-- La liste des motos

-- (nom, vendeur, quantité et marge)

-- triés par marge décroissante

SELECT productName, productVendor, quantityInStock,

ROUND((MSRP - buyPrice), 2)

AS discount

FROM products

WHERE productLine = 'Motorcycles'

ORDER by discount DESC;

​

-- La liste des commandes

-- (numéro de commande, date de commande,

-- date d'expédition,

-- écart en jours

-- entre la date de commande

-- et la date d'expédition,

-- statut de la commande)

-- soit qui sont en cours de traitement,

-- soit qui ont été expédiées

-- plus de 10 jours après la date de commande

-- triés par écart décroissant

-- puis par date de commande

SELECT orderNumber, orderDate, shippedDate,

DATEDIFF(shippedDate, orderDate) as 'Processing Time'

FROM orders

WHERE status = 'In Process'

OR status = 'Shipped' AND DATEDIFF(shippedDate, orderDate) >= 10

ORDER BY 'Processing Time', orderDate;

​

-- La liste des produits

-- (nom et valeur du stock à la vente)

--des années 1960

SELECT productName, ROUND((MSRP * quantityInStock), 2)

AS 'Total Value' FROM products

WHERE productName LIKE '196%';

​

-- Le prix moyen d'un produit vendu

-- par chaque vendeur triés

-- par prix moyen décroissant

SELECT DISTINCT ROUND(AVG(MSRP), 2)

AS 'Average Price'

FROM products

GROUP BY productVendor

ORDER BY 'Average Price' DESC;

​

-- Le nombre de produits

-- pour chaque ligne de produit

SELECT count(*)

FROM products

GROUP BY productLine;

​

-- Le total du stock

-- et le total de la valeur

-- du stock à la vente

-- de chaque ligne de produit

-- pour les produits

-- vendus plus de 100$

-- trié par total

-- de la valeur du stock à la vente

SELECT

ROUND(SUM(quantityInStock), 2) AS TotalProductsQuantity,

ROUND(SUM(quantityInStock * MSRP), 2)

AS TotalValue FROM products

WHERE MSRP > 100

GROUP BY productLine

ORDER BY TotalValue;

​

-- La quantité du produit

-- le plus en stock de chaque vendeur

-- trié par vendeur

SELECT MAX(quantityInStock)

FROM products

GROUP BY productVendor

ORDER BY productVendor;

​

-- Le prix de l'avion

-- qui coûte le moins cher à l'achat

 SELECT MIN(buyPrice) FROM products

 WHERE productLine LIKE '%Plane%';

​

-- Le crédit des clients qui ont payé

-- plus de 20000$ durant l'année 2004

-- trié par crédit décroissant

SELECT customerNumber,

ROUND(SUM(amount), 2)

AS TotalPayment FROM payments

WHERE paymentDate  LIKE '%2004%'

GROUP By customerNumber

HAVING TotalPayment > 20000

ORDER BY TotalPayment DESC;

​

​

-- La liste des employés

-- (nom, prénom et fonction)

-- et des bureaux (adresse et ville)

-- dans lequel ils travaillent

SELECT e.lastName, e.firstName, e.jobTitle,

o.addressLine1, o.addressLine2

FROM employees e

INNER JOIN offices o

ON e.officeCode = o.officeCode

​

-- La liste des clients français ou

-- américains

-- (nom du client, nom,

-- prénom du contact et pays)

-- et de leur commercial dédié

-- (nom et prénom)

-- triés par nom et prénom du contact

SELECT c.customerName,

c.contactLastname, c.contactFirstName

FROM customers c

INNER JOIN employees e ON e.employeeNumber = c.salesRepEmployeeNumber

WHERE country IN ('France', 'USA')

ORDER BY contactLastName, contactFirstName;

​

​

-- La liste des lignes de commande

-- (numéro de commande, code, nom et ligne de produit)

-- et la remise appliquée aux voitures ou motos commandées

-- triées par numéro de commande

-- puis par remise décroissante

SELECT o.orderNumber, od.productCode,

p.productName, p.productLine,

(p.MSRP - od.priceEach) AS discount

FROM orders o

INNER JOIN orderdetails od

ON o.orderNumber = od.orderNumber

INNER JOIN products p ON od.productCode = p.productCode

WHERE productLine IN ('Classic Cars', 'Vintage Cars', 'Motorcycles')

ORDER BY o.orderNumber, discount DESC;

​

​

-- Le total des paiements effectués de chaque client

-- (numéro, nom et pays) américain,

-- allemand ou français

-- de plus de 50000$

-- trié par pays puis par total des paiements décroissant

SELECT ROUND(SUM(amount), 2)

AS TotalPayment,

c.customerNumber, c.customerName, c.country

FROM customers c

INNER JOIN payments p ON p.customerNumber = c.customerNumber

WHERE country IN ('France', 'USA', 'Germany')

GROUP BY customerNumber, c.customerName, c.country

HAVING TotalPayment > 50000

ORDER BY c.country, TotalPayment DESC;

​

​

-- Le montant total de chaque commande (numéro et date)

-- des clients New-Yorkais (nom) trié par nom du client

-- puis par date de commande

SELECT ROUND(SUM(quantityOrdered * priceEach), 2) AS TotalPayment, o.orderNumber, o.orderDate, c.customerName

FROM customers c

INNER JOIN orders o ON c.customerNumber = o.customerNumber

INNER JOIN orderdetails od ON o.orderNumber = od.orderNumber

WHERE c.city = 'NYC'

GROUP BY c.city, c.customerName, o.orderNumber, o.orderDate

ORDER BY c.customerName, o.orderDate;


------------classicmodels------------------------

SELECT o.orderNumber, o.customerNumber, c.customerName, c.contactLastName, c.contactFirstName, c.addressLine1, c.city
p.productName, od.quantityOrdered, od.priceEach, (od.quantityOrdered * od.priceEach) AS sousTotal,
SUM(sousTotal) AS totalHT, 0.196 AS TVA, (total HT * TVA) AS totalTTC

FROM orders AS o

INNER JOIN customers AS c

ON o.customerNumber = c.customerNumber

INNER JOIN orderdetails AS od 

ON o.orderNumber= od.orderNumber

INNER JOIN products AS p

ON od.productCode = p.productCode

SELECT o.orderNumber, o.customerNumber, c.customerName, c.contactLastName, c.contactFirstName, c.addressLine1, c.city, p.productName, od.quantityOrdered, od.priceEach, (od.quantityOrdered * od.priceEach) AS sousTotal, SUM(sousTotal) AS totalHT, 0.196 AS TVA, (totalHT * TVA) AS totalTTC FROM orders AS o INNER JOIN customers AS c ON o.customerNumber = c.customerNumber INNER JOIN orderdetails AS od ON o.orderNumber= od.orderNumber INNER JOIN products AS p ON od.productCode = p.productCode
----------------------------------------------------------------------------
requete : contact 

SELECT
  o.orderNumber,
  c.customerName,
  c.contactLastName,
  c.contactFirstName,
  c.addressLine1,
  c.city
FROM orders AS o
INNER JOIN customers AS c ON o.customerNumber = c.customerNumber

